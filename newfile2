image:
  repository: trinodb/trino
  tag: "474"
  pullPolicy: IfNotPresent

coordinator:
  replicaCount: 1
  config:
    data: |
      coordinator=true
      node-scheduler.include-coordinator=true
      http-server.http.port=8080
      query.max-memory=2GB
      query.max-memory-per-node=1GB
      discovery-server.enabled=true
      discovery.uri=http://localhost:8080

  jvm:
    data: |
      -server
      -Xmx4G
      -XX:+UseG1GC

  catalogs:
    tpch: |
      connector.name=tpch

worker:
  replicaCount: 2
  config:
    data: |
      coordinator=false
      http-server.http.port=8080
      discovery.uri=http://trino-coordinator:8080

  jvm:
    data: |
      -server
      -Xmx6G
      -XX:+UseG1GC

  catalogs:
    tpch: |
      connector.name=tpch

service:
  type: ClusterIP
  port: 8080

####### Ingress yml ###
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: trino
  namespace: trino
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
spec:
  ingressClassName: nginx
  rules:
    - host: trino.example.com  # üîÅ Replace with your hostname
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: trino
                port:
                  number: 8080
  tls:
    - hosts:
        - trino.example.com  # üîÅ Replace with your hostname
      secretName: trino-tls   # üîÅ Must match existing TLS cert secret

